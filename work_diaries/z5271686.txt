
week1:
find the valueful api for crawling data
crawling, clean and format data
brainstorm the novel functionality

week2:
draw the ER diagram, clean the data 
write the user stroy and draw the ui diagram
brainstorm the novel functionality

week3:
draw the ui diagram, double check the ER diagram and rewrite the ER diagram
wrote the description how some of the defined user stories to be implemented provied novel functionality
import the data into database

week4:
write the template of the backend

write the models: Admins, Events, EventMovie, Questions, Movies, MovieImage, MovieGenre, Persons, MovieDirector, MovieActor
write the bluepoint, and namespacd of the ruote, writ the model_format
write the route: sendemail, register, login, logout, searchmovie, eventsearchmovie, createevent

write the helpfuntion in auth_utils, movie_utils
write the route that show all the events
write the route that show the detail of the given event
write the route that can update the event
init the smtpserver in __init__
add .gitignore
merge the backend, and test all the margin case, also test the normal functionality

week5:
write the event models, also write the event attemp and event finish, also fix the event search function
write the user profile api


wrrk6:
write  the review model also the review likes and review unlikes models
write the sort review api also the react review api
write the thread models 

wee7:
write the recommendation by genre using the given movie id, also by director and the genre base on user history review
write the fourm models and the forum delete and post

week8:
write the forum react and forum comment models
also the event edit api
imporve the code that write before 
and format the api doc

week9:
try to setup the redis to store the token, will do more in weekend

week10:
set up the redis
change the database table
wirt the post react api
also the wtachedlist api
rewrite the function which written before to improve efficience
add more comment to the backend to make the code more readable with harry and william
test all the api written by backend also test the edge case with harry and william
